name: E2E Server Tests and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, reopened, labeled, unlabeled, synchronize]

jobs:
  push_and_deploy:
    name: Push Server Image and Deploy to ECS
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Configure Node
        id: configure-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Install pnpm
        id: install-pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install dependencies
        id: install-dependencies
        run: |
          pnpm install

      - name: Configure AWS Credentials
        id: configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        id: set-up-docker-buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag
        id: generate-tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Build and export image
        uses: docker/build-push-action@v6
        with:
          context: ./server
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{steps.login-ecr.outputs.registry}}/${{ vars.ECR_REPOSITORY }}:test

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: '${{steps.login-ecr.outputs.registry}}/${{ vars.ECR_REPOSITORY }}:test'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
      
      - name: Build and push the image to AWS ECR
        uses: docker/build-push-action@v6
        with:
          context: ./server
          push: true
          cache-from: type=gha
          tags: |
            ${{steps.login-ecr.outputs.registry}}/${{ vars.ECR_REPOSITORY }}:${{ steps.generate-tag.outputs.sha }}


      # - name: Render Amazon ECS task definition
      #   id: render-web-container
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: .aws/task_definition.json
      #     container-name: ${{ vars.ECS_CONTAINER_NAME }}
      #     image: ${{ steps.login-ecr.outputs.registry }}/${{ vars.ECR_REPOSITORY }}:${{ steps.image-tag.outputs.sha }}

      # - name: Deploy to Amazon ECS service
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      #   with:
      #     task-definition: ${{ steps.render-web-container.outputs.task-definition }}
      #     service: ${{ vars.ECS_SERVICE_NAME }}
      #     cluster: ${{ vars.ECS_CLUSTER_NAME }}